{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport LineDraw from '../helper/LineDraw.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport * as roamHelper from '../../component/helper/roamHelper.js';\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper.js';\nimport * as graphic from '../../util/graphic.js';\nimport adjustEdge from './adjustEdge.js';\nimport { getNodeGlobalScale } from './graphHelper.js';\nimport ChartView from '../../view/Chart.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { simpleLayoutEdge } from './simpleLayoutHelper.js';\nimport { circularLayout, rotateNodeLabel } from './circularLayoutHelper.js';\n\nfunction isViewCoordSys(coordSys) {\n  return coordSys.type === 'view';\n}\n\nvar GraphView =\n/** @class */\nfunction (_super) {\n  __extends(GraphView, _super);\n\n  function GraphView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphView.type;\n    return _this;\n  }\n\n  GraphView.prototype.init = function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  };\n\n  GraphView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (isViewCoordSys(coordSys)) {\n      var groupNewProp = {\n        x: coordSys.x,\n        y: coordSys.y,\n        scaleX: coordSys.scaleX,\n        scaleY: coordSys.scaleY\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData(); // TODO: TYPE\n\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get(['force', 'layoutAnimation']);\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    var layout = seriesModel.get('layout');\n    data.graph.eachNode(function (node) {\n      var idx = node.dataIndex;\n      var el = node.getGraphicEl();\n      var itemModel = node.getModel();\n\n      if (!el) {\n        return;\n      } // Update draggable\n\n\n      el.off('drag').off('dragend');\n      var draggable = itemModel.get('draggable');\n\n      if (draggable) {\n        el.on('drag', function (e) {\n          switch (layout) {\n            case 'force':\n              forceLayout.warmUp();\n              !_this._layouting && _this._startForceLayoutIteration(forceLayout, layoutAnimation);\n              forceLayout.setFixed(idx); // Write position back to layout\n\n              data.setItemLayout(idx, [el.x, el.y]);\n              break;\n\n            case 'circular':\n              data.setItemLayout(idx, [el.x, el.y]); // mark node fixed\n\n              node.setLayout({\n                fixed: true\n              }, true); // recalculate circular layout\n\n              circularLayout(seriesModel, 'symbolSize', node, [e.offsetX, e.offsetY]);\n\n              _this.updateLayout(seriesModel);\n\n              break;\n\n            case 'none':\n            default:\n              data.setItemLayout(idx, [el.x, el.y]); // update edge\n\n              simpleLayoutEdge(seriesModel.getGraph(), seriesModel);\n\n              _this.updateLayout(seriesModel);\n\n              break;\n          }\n        }).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        });\n      }\n\n      el.setDraggable(draggable && !!forceLayout, !!itemModel.get('cursor'));\n      var focus = itemModel.get(['emphasis', 'focus']);\n\n      if (focus === 'adjacency') {\n        getECData(el).focus = node.getAdjacentDataIndices();\n      }\n    });\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      var focus = edge.getModel().get(['emphasis', 'focus']);\n\n      if (!el) {\n        return;\n      }\n\n      if (focus === 'adjacency') {\n        getECData(el).focus = {\n          edge: [edge.dataIndex],\n          node: [edge.node1.dataIndex, edge.node2.dataIndex]\n        };\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get(['circular', 'rotateLabel']);\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.graph.eachNode(function (node) {\n      rotateNodeLabel(node, circularRotateLabel, cx, cy);\n    });\n    this._firstRender = false;\n  };\n\n  GraphView.prototype.dispose = function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = null;\n  };\n\n  GraphView.prototype._startForceLayoutIteration = function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  };\n\n  GraphView.prototype._updateController = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (!isViewCoordSys(seriesModel.coordinateSystem)) {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      _this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n\n      _this._lineDraw.updateLayout(); // Only update label layout on zoom\n\n\n      api.updateLabelLayout();\n    });\n  };\n\n  GraphView.prototype._updateNodeAndLinkScale = function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n    var nodeScale = getNodeGlobalScale(seriesModel);\n    data.eachItemGraphicEl(function (el, idx) {\n      el && el.setSymbolScale(nodeScale);\n    });\n  };\n\n  GraphView.prototype.updateLayout = function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  };\n\n  GraphView.prototype.remove = function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  };\n\n  GraphView.type = 'graph';\n  return GraphView;\n}(ChartView);\n\nexport default GraphView;","map":{"version":3,"names":["__extends","SymbolDraw","LineDraw","RoamController","roamHelper","onIrrelevantElement","graphic","adjustEdge","getNodeGlobalScale","ChartView","getECData","simpleLayoutEdge","circularLayout","rotateNodeLabel","isViewCoordSys","coordSys","type","GraphView","_super","_this","apply","arguments","prototype","init","ecModel","api","symbolDraw","lineDraw","group","_controller","getZr","_controllerHost","target","add","_symbolDraw","_lineDraw","_firstRender","render","seriesModel","coordinateSystem","_model","groupNewProp","x","y","scaleX","scaleY","attr","updateProps","getGraph","data","getData","updateData","edgeData","getEdgeData","_updateNodeAndLinkScale","_updateController","clearTimeout","_layoutTimeout","forceLayout","layoutAnimation","get","_startForceLayoutIteration","layout","graph","eachNode","node","idx","dataIndex","el","getGraphicEl","itemModel","getModel","off","draggable","on","e","warmUp","_layouting","setFixed","setItemLayout","setLayout","fixed","offsetX","offsetY","updateLayout","setUnfixed","setDraggable","focus","getAdjacentDataIndices","eachEdge","edge","node1","node2","circularRotateLabel","cx","getLayout","cy","dispose","self","step","stopped","setTimeout","controller","controllerHost","setPointerChecker","rect","getBoundingRect","applyTransform","transform","contain","disable","enable","zoomLimit","zoom","getZoom","updateViewOnPan","dx","dy","dispatchAction","seriesId","id","updateViewOnZoom","scale","originX","originY","updateLabelLayout","nodeScale","eachItemGraphicEl","setSymbolScale","remove"],"sources":["/Users/minor/Documents/micro_mall/node_modules/echarts/lib/chart/graph/GraphView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport LineDraw from '../helper/LineDraw.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport * as roamHelper from '../../component/helper/roamHelper.js';\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper.js';\nimport * as graphic from '../../util/graphic.js';\nimport adjustEdge from './adjustEdge.js';\nimport { getNodeGlobalScale } from './graphHelper.js';\nimport ChartView from '../../view/Chart.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { simpleLayoutEdge } from './simpleLayoutHelper.js';\nimport { circularLayout, rotateNodeLabel } from './circularLayoutHelper.js';\n\nfunction isViewCoordSys(coordSys) {\n  return coordSys.type === 'view';\n}\n\nvar GraphView =\n/** @class */\nfunction (_super) {\n  __extends(GraphView, _super);\n\n  function GraphView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphView.type;\n    return _this;\n  }\n\n  GraphView.prototype.init = function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  };\n\n  GraphView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (isViewCoordSys(coordSys)) {\n      var groupNewProp = {\n        x: coordSys.x,\n        y: coordSys.y,\n        scaleX: coordSys.scaleX,\n        scaleY: coordSys.scaleY\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData(); // TODO: TYPE\n\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get(['force', 'layoutAnimation']);\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    var layout = seriesModel.get('layout');\n    data.graph.eachNode(function (node) {\n      var idx = node.dataIndex;\n      var el = node.getGraphicEl();\n      var itemModel = node.getModel();\n\n      if (!el) {\n        return;\n      } // Update draggable\n\n\n      el.off('drag').off('dragend');\n      var draggable = itemModel.get('draggable');\n\n      if (draggable) {\n        el.on('drag', function (e) {\n          switch (layout) {\n            case 'force':\n              forceLayout.warmUp();\n              !_this._layouting && _this._startForceLayoutIteration(forceLayout, layoutAnimation);\n              forceLayout.setFixed(idx); // Write position back to layout\n\n              data.setItemLayout(idx, [el.x, el.y]);\n              break;\n\n            case 'circular':\n              data.setItemLayout(idx, [el.x, el.y]); // mark node fixed\n\n              node.setLayout({\n                fixed: true\n              }, true); // recalculate circular layout\n\n              circularLayout(seriesModel, 'symbolSize', node, [e.offsetX, e.offsetY]);\n\n              _this.updateLayout(seriesModel);\n\n              break;\n\n            case 'none':\n            default:\n              data.setItemLayout(idx, [el.x, el.y]); // update edge\n\n              simpleLayoutEdge(seriesModel.getGraph(), seriesModel);\n\n              _this.updateLayout(seriesModel);\n\n              break;\n          }\n        }).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        });\n      }\n\n      el.setDraggable(draggable && !!forceLayout, !!itemModel.get('cursor'));\n      var focus = itemModel.get(['emphasis', 'focus']);\n\n      if (focus === 'adjacency') {\n        getECData(el).focus = node.getAdjacentDataIndices();\n      }\n    });\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      var focus = edge.getModel().get(['emphasis', 'focus']);\n\n      if (!el) {\n        return;\n      }\n\n      if (focus === 'adjacency') {\n        getECData(el).focus = {\n          edge: [edge.dataIndex],\n          node: [edge.node1.dataIndex, edge.node2.dataIndex]\n        };\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get(['circular', 'rotateLabel']);\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.graph.eachNode(function (node) {\n      rotateNodeLabel(node, circularRotateLabel, cx, cy);\n    });\n    this._firstRender = false;\n  };\n\n  GraphView.prototype.dispose = function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = null;\n  };\n\n  GraphView.prototype._startForceLayoutIteration = function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  };\n\n  GraphView.prototype._updateController = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (!isViewCoordSys(seriesModel.coordinateSystem)) {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      _this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n\n      _this._lineDraw.updateLayout(); // Only update label layout on zoom\n\n\n      api.updateLabelLayout();\n    });\n  };\n\n  GraphView.prototype._updateNodeAndLinkScale = function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n    var nodeScale = getNodeGlobalScale(seriesModel);\n    data.eachItemGraphicEl(function (el, idx) {\n      el && el.setSymbolScale(nodeScale);\n    });\n  };\n\n  GraphView.prototype.updateLayout = function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  };\n\n  GraphView.prototype.remove = function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  };\n\n  GraphView.type = 'graph';\n  return GraphView;\n}(ChartView);\n\nexport default GraphView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}