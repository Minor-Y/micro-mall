{"ast":null,"code":"import api from '../../../api/index';\nexport default {\n  data() {\n    return {\n      pparams: {\n        location: '',\n        key: 'b039d29332b3477c84c6131e424510ec'\n      },\n      weatherIn: [],\n      isHour: '',\n      sportText: '',\n      notice: [{\n        title: '直播技术服务费\"限免公告\",请关注！！哈哈哈',\n        date: '7/01'\n      }, {\n        title: '社区团购多重升级,全力嘎嘎嘎支持抗疫',\n        date: '7/06'\n      }, {\n        title: '小程序链接生成与使用规则调整公告',\n        date: '7/21'\n      }, {\n        title: '6.18提效工具,免费使用6个月起~~',\n        date: '8/01'\n      }, {\n        title: '新增多人拼团功能,助力营销提升LO哦咯',\n        date: '8/05'\n      }, {\n        title: '新增多人拼团功能,助力营销提升desh达达',\n        date: '8/05'\n      }],\n      commonFun: [{\n        title: '商品',\n        icon: 'el-icon-goods'\n      }, {\n        title: '订单',\n        icon: 'el-icon-document-remove'\n      }, {\n        title: '客户',\n        icon: 'el-icon-user'\n      }, {\n        title: '数据',\n        icon: 'el-icon-data-line'\n      }, {\n        title: '标签',\n        icon: 'el-icon-collection-tag'\n      }, {\n        title: '消息',\n        icon: 'el-icon-bell'\n      }]\n    };\n  },\n\n  created() {\n    this.getWeather();\n  },\n\n  methods: {\n    async getWeather() {\n      // 获取IP，再根据IP获取城市名称\n      const cityIp = await this.$axios.get('/ip/cityjson');\n      if (cityIp.status !== 200) return this.$message.error('获取IP地址失败'); // 分离并获取ip地址\n\n      let ip = cityIp.data.split('=')[1];\n      ip = JSON.parse(ip.split(';')[0]);\n      const cityName = await this.$axios.get('/api/ipJson.jsp', {\n        params: {\n          ip: ip,\n          json: true\n        }\n      });\n      if (cityName.status !== 200) return this.$$message.error('获取ip信息失败');\n      this.pparams.location = cityName.data.city.split('市')[0]; // 根据城市名称获取城市ID\n\n      const cityIds = await this.$axios.get(api.getLocationId, {\n        params: this.pparams\n      });\n      if (cityIds.status !== 200) return this.$message.error('获取城市id失败');\n      const cityId = cityIds.data.location.filter(item => {\n        return item.name === this.pparams.location;\n      }); // 获取城市天气信息\n\n      const weatherInfo = await this.$axios.get(api.getWeather, {\n        params: {\n          key: this.pparams.key,\n          location: cityId[0].id\n        }\n      });\n      if (weatherInfo.status !== 200) return this.$message.error('获取天气信息失败');\n      this.weatherIn = weatherInfo.data.now;\n      console.log(weatherInfo);\n      console.log(this.weatherIn); //   判断当前时间\n\n      let hour = this.weatherIn.obsTime.substring(11, 13);\n\n      if (hour > 12) {\n        this.isHour = '下午好';\n      } else {\n        this.isHour = '上午好';\n      } // 获取生活运动指数\n\n\n      const sportIndex = await this.$axios.get(api.getWeatherIndex, {\n        params: {\n          key: this.pparams.key,\n          location: cityId[0].id,\n          type: 1\n        }\n      });\n      if (sportIndex.status !== 200) return this.$message.error('获取指数失败');\n      this.sportText = sportIndex.data.daily[0].text;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqDA;AACA;EACAA;IACA;MACAC;QACAC,YADA;QAEAC;MAFA,CADA;MAKAC,aALA;MAMAC,UANA;MAOAC,aAPA;MAQAC,SACA;QACAC,+BADA;QAEAC;MAFA,CADA,EAKA;QACAD,2BADA;QAEAC;MAFA,CALA,EASA;QACAD,yBADA;QAEAC;MAFA,CATA,EAaA;QACAD,4BADA;QAEAC;MAFA,CAbA,EAiBA;QACAD,4BADA;QAEAC;MAFA,CAjBA,EAqBA;QACAD,8BADA;QAEAC;MAFA,CArBA,CARA;MAkCAC,YACA;QACAF,WADA;QAEAG;MAFA,CADA,EAKA;QACAH,WADA;QAEAG;MAFA,CALA,EASA;QACAH,WADA;QAEAG;MAFA,CATA,EAaA;QACAH,WADA;QAEAG;MAFA,CAbA,EAiBA;QACAH,WADA;QAEAG;MAFA,CAjBA,EAqBA;QACAH,WADA;QAEAG;MAFA,CArBA;IAlCA;EA6DA,CA/DA;;EAgEAC;IACA;EACA,CAlEA;;EAmEAC;IACA;MACA;MACA;MACA,kEAHA,CAIA;;MACA;MACAC;MACA;QACAC;UAAAD;UAAAE;QAAA;MADA;MAGA;MACA,yDAXA,CAYA;;MACA;QACAD;MADA;MAGA;MACA;QACA;MACA,CAFA,EAjBA,CAoBA;;MACA;QACAA;UAAAZ;UAAAD;QAAA;MADA;MAGA,gCACA;MACA;MACAe;MACAA,4BA5BA,CA6BA;;MACA;;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA,CAnCA,CAoCA;;;MACA;QACAF;UAAAZ;UAAAD;UAAAgB;QAAA;MADA;MAGA;MACA;IACA;;EA3CA;AAnEA","names":["data","pparams","location","key","weatherIn","isHour","sportText","notice","title","date","commonFun","icon","created","methods","ip","params","json","console","type"],"sourceRoot":"src/views/dashboardover","sources":["Dashboardover.vue"],"sourcesContent":["<template>\n  <div>\n    <el-row>\n      <el-col class=\"dash-left\">\n        <!-- 欢迎和天气卡片 -->\n        <el-card shadow=\"never\" class=\"dash-hello\">\n          <el-col class=\"dash-welcome\">\n            <span>{{isHour}},欢迎~</span>\n          </el-col>\n          <el-col class=\"dash-weather\">\n            <el-col class=\"dash-icon\">\n              <el-avatar shape=\"circle\" size=\"large\" src=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\"></el-avatar>\n            </el-col>\n            <el-col class=\"dash-weather-info\">\n              <h1>开始您一天的工作吧！</h1>\n              <span>今日{{weatherIn.text}},{{sportText}}</span>\n            </el-col>\n          </el-col>\n        </el-card>\n        <!-- 常用功能 -->\n        <el-card class=\"common-fun\">\n            <ul>\n                <li v-for=\"(common, index) in commonFun\" :key=\"index\">\n                    <p><i :class=\"common.icon\"></i></p>\n                    <p>{{common.title}}</p>\n                </li>\n            </ul>\n        </el-card>\n      </el-col>\n      <el-col class=\"dash-right\">\n        <!-- 公告卡片 -->\n        <el-card shadow=\"never\" class=\"dash-notice\">\n          <el-col class=\"notice-title\">\n            公告\n            <a href=\"\">更多</a>\n          </el-col>\n          <el-col class=\"notice-content\">\n            <ul>\n              <li v-for=\"(item,index) in notice\" :key=\"index\">\n                <a href=\"\">{{item.title}}\n                  <span>{{item.date}}</span>\n                </a>\n              </li>\n            </ul>\n          </el-col>\n        </el-card>\n      </el-col>\n    </el-row>\n\n  </div>\n</template>\n\n<script>\nimport api from '../../../api/index'\nexport default {\n  data() {\n    return {\n      pparams: {\n        location: '',\n        key: 'b039d29332b3477c84c6131e424510ec',\n      },\n      weatherIn: [],\n      isHour: '',\n      sportText: '',\n      notice: [\n        {\n          title: '直播技术服务费\"限免公告\",请关注！！哈哈哈',\n          date: '7/01',\n        },\n        {\n          title: '社区团购多重升级,全力嘎嘎嘎支持抗疫',\n          date: '7/06',\n        },\n        {\n          title: '小程序链接生成与使用规则调整公告',\n          date: '7/21',\n        },\n        {\n          title: '6.18提效工具,免费使用6个月起~~',\n          date: '8/01',\n        },\n        {\n          title: '新增多人拼团功能,助力营销提升LO哦咯',\n          date: '8/05',\n        },\n        {\n          title: '新增多人拼团功能,助力营销提升desh达达',\n          date: '8/05',\n        },\n      ],\n      commonFun: [\n        {\n            title: '商品',\n            icon: 'el-icon-goods'\n        },\n        {\n            title: '订单',\n            icon: 'el-icon-document-remove'\n        },\n        {\n            title: '客户',\n            icon: 'el-icon-user'\n        },\n        {\n            title: '数据',\n            icon: 'el-icon-data-line'\n        },\n        {\n            title: '标签',\n            icon: 'el-icon-collection-tag'\n        },\n        {\n            title: '消息',\n            icon: 'el-icon-bell'\n        },\n      ],\n    }\n  },\n  created() {\n    this.getWeather()\n  },\n  methods: {\n    async getWeather() {\n      // 获取IP，再根据IP获取城市名称\n      const cityIp = await this.$axios.get('/ip/cityjson')\n      if (cityIp.status !== 200) return this.$message.error('获取IP地址失败')\n      // 分离并获取ip地址\n      let ip = cityIp.data.split('=')[1]\n      ip = JSON.parse(ip.split(';')[0])\n      const cityName = await this.$axios.get('/api/ipJson.jsp', {\n        params: { ip: ip, json: true },\n      })\n      if (cityName.status !== 200) return this.$$message.error('获取ip信息失败')\n      this.pparams.location = cityName.data.city.split('市')[0]\n      // 根据城市名称获取城市ID\n      const cityIds = await this.$axios.get(api.getLocationId, {\n        params: this.pparams,\n      })\n      if (cityIds.status !== 200) return this.$message.error('获取城市id失败')\n      const cityId = cityIds.data.location.filter((item) => {\n        return item.name === this.pparams.location\n      })\n      // 获取城市天气信息\n      const weatherInfo = await this.$axios.get(api.getWeather, {\n        params: { key: this.pparams.key, location: cityId[0].id },\n      })\n      if (weatherInfo.status !== 200)\n        return this.$message.error('获取天气信息失败')\n      this.weatherIn = weatherInfo.data.now\n      console.log(weatherInfo)\n      console.log(this.weatherIn)\n      //   判断当前时间\n      let hour = this.weatherIn.obsTime.substring(11, 13)\n      if (hour > 12) {\n        this.isHour = '下午好'\n      } else {\n        this.isHour = '上午好'\n      }\n      // 获取生活运动指数\n      const sportIndex = await this.$axios.get(api.getWeatherIndex, {\n        params: { key: this.pparams.key, location: cityId[0].id, type: 1 },\n      })\n      if (sportIndex.status !== 200) return this.$message.error('获取指数失败')\n      this.sportText = sportIndex.data.daily[0].text\n    },\n  },\n}\n</script>\n\n<style lang=\"less\" scoped>\n.el-row {\n  display: flex;\n}\n.el-card {\n  box-shadow: 0 0 4px 0 rgb(200 200 200 / 50%);\n  border: none;\n  margin: 2px 2px 12px 2px;\n}\n.dash-left {\n  flex: 1;\n  height: 100%;\n}\n.dash-right {\n  width: 280px;\n  height: 100%;\n  margin-left: 12px;\n  .dash-notice {\n    height: 250px;\n    // 公告头部\n    .notice-title {\n      font-size: 14px;\n      font-weight: 700;\n      margin-bottom: 14px;\n      a {\n        display: block;\n        float: right;\n        text-decoration: none;\n        color: #000;\n        opacity: 0.3;\n        font-size: 12px;\n      }\n    }\n  }\n  //   公告内容\n  .notice-content {\n    ul {\n      padding: 0;\n      margin: 0;\n      li {\n        list-style-type: none;\n        height: 33px;\n      }\n    }\n    a {\n      position: relative;\n      display: block;\n      text-decoration: none;\n      font-size: 12px;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      color: #000;\n      opacity: 0.7;\n      padding-right: 40px;\n      span {\n        position: absolute;\n        right: 0;\n        font-weight: 500;\n      }\n    }\n  }\n}\n.dash-hello {\n  height: 152px;\n  .dash-welcome {\n    font-size: 16px;\n    font-weight: 700;\n    margin-bottom: 18px;\n  }\n  .dash-weather {\n    display: flex;\n    align-items: center;\n    .dash-icon {\n      width: 76px;\n      height: 76px;\n      margin-right: 14px;\n    }\n    .el-avatar {\n      width: 100%;\n      height: 100%;\n    }\n    .dash-weather-info {\n      h1 {\n        margin: 0 0 10px 0;\n      }\n      span {\n        font-size: 14px;\n      }\n    }\n  }\n}\n\n::v-deep .el-card__body {\n  padding: 15px;\n  height: 100%;\n  box-sizing: border-box;\n  text-align: left;\n}\n.common-fun {\n  height: 86px;\n  ul {\n    margin: 0;\n    padding: 0;\n    li {\n        list-style-type: none;\n        p {\n            margin: 0;\n        }\n    }\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}