{"ast":null,"code":"import api from '../../../api/index';\nimport _ from 'lodash';\nimport MinorDrawer from '../../components/M-Drawer.vue';\nexport default {\n  data() {\n    return {\n      activeName: 'first',\n      searchValue: '',\n      searchSelect: '1',\n      options: [],\n      accountQuery: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10,\n        value: '1'\n      },\n      accountDate: [],\n      total: 0,\n      drawer: false,\n      editData: [],\n      roleData: [],\n      roleEditList: {\n        // 角色编辑抽屉设置项\n        drawer: false,\n        size: '560px',\n        title: '角色编辑'\n      },\n      addEditList: {\n        // 添加角色抽屉设置项\n        drawer: false,\n        size: '560px',\n        title: '角色添加'\n      },\n      rolePermission: {\n        id: '',\n        beforRoleName: '',\n        roleName: '',\n        roleKeys: []\n      },\n      addRolePermission: {\n        roleName: '',\n        roleKeys: []\n      },\n      rolePermissionList: [],\n      roleProps: {\n        children: 'childs',\n        label: 'name'\n      }\n    };\n  },\n\n  components: {\n    MinorDrawer: MinorDrawer\n  },\n\n  created() {\n    this.getAccountList();\n    this.getMenuList();\n    this.getRoleList();\n  },\n\n  methods: {\n    handleClick(e) {\n      console.log(e);\n    },\n\n    handleSizeChange(size) {\n      this.accountQuery.pagesize = size;\n      this.getAccountList();\n    },\n\n    handleCurrentChange(num) {\n      this.accountQuery.pagenum = num;\n      this.getAccountList();\n    },\n\n    // 获取账号列表\n    async getAccountList() {\n      const {\n        data: res\n      } = await this.$axios.get(`${api.localUrl}/accounts`, {\n        params: this.accountQuery\n      });\n      if (res.status !== 200) return this.$message.error('获取账号列表失败，请刷新重试');\n      this.accountDate = res.data;\n      this.total = res.total;\n      console.log('账号列表', res);\n      let userId = window.sessionStorage.getItem('userid');\n    },\n\n    // 获取菜单项\n    async getMenuList() {\n      const result = await this.$axios.get(`${api.localUrl}/menus`);\n      this.rolePermissionList = result.data.data;\n      console.log('权限列表', result);\n    },\n\n    // 获取角色列表\n    async getRoleList() {\n      const {\n        data: res\n      } = await this.$axios.get(`${api.localUrl}/role`);\n      if (res.status !== 200) return this.$message.error('获取角色列表失败，请刷新重试');\n      this.roleData = res.data;\n      res.data.forEach(item => {\n        this.options.push({\n          value: item.id,\n          label: item.rolename\n        });\n      });\n      console.log('res1', res);\n    },\n\n    // 显示抽屉\n    async showAccountEdit(acc) {\n      this.editData = _.cloneDeep(acc);\n\n      if (this.editData.status === 1) {\n        this.editData.status = '开启';\n      } else {\n        this.editData.status = '禁用';\n      }\n\n      const {\n        data: res\n      } = await this.$axios.get(`${api.localUrl}/role`);\n      if (res.status !== 200) return this.$message.error('获取角色列表失败，请刷新重试');\n      this.roleData = res.data;\n      this.drawer = true;\n    },\n\n    // 抽屉关闭前的动作\n    drawerClose() {\n      this.drawer = false;\n    },\n\n    // 提交账号编辑\n    async commitEdit() {\n      console.log(this.editData);\n      const res = await this.$axios.put(`${api.localUrl}/accounts/${this.editData.userid}`, {\n        mobile: this.editData.mobile,\n        role: this.editData.role,\n        sex: this.editData.sex,\n        status: this.editData.status,\n        username: this.editData.username,\n        introduction: this.editData.introduction\n      });\n      if (res.status !== 200) return this.$message.error('更改账号状态失败，请刷新重试');\n      console.log(res);\n      this.drawer = false;\n      this.getAccountList();\n    },\n\n    // 关闭抽屉\n    closeEdit() {\n      this.drawer = false;\n    },\n\n    // 打开角色添加抽屉\n    async addRole() {\n      this.getMenuList();\n      this.addEditList.drawer = true;\n    },\n\n    showDrawer(re) {\n      // 角色管理-打开抽屉\n      this.roleEditList.drawer = true;\n      console.log(re, re.menus.split(','));\n      this.rolePermission.id = re.id;\n      this.rolePermission.roleName = re.rolename;\n      this.rolePermission.beforRoleName = re.rolename;\n      console.log('zheshi', this.rolePermission.roleKeys);\n      this.$nextTick(() => {\n        this.$refs.roleRef.setCheckedKeys(re.menus.split(','));\n      });\n    },\n\n    closeDrawer() {\n      // 角色管理-关闭抽屉\n      this.roleEditList.drawer = false;\n    },\n\n    // 角色节点选中状态发生变化时的回调\n    handleCheckChange(a, b, c) {\n      this.rolePermission.roleKeys = this.$refs.roleRef.getCheckedKeys(true);\n      console.log('所有选中的节点key', this.rolePermission.roleKeys);\n    },\n\n    addRoleChange() {\n      this.addRolePermission.roleKeys = this.$refs.addRoleRef.getCheckedKeys(true);\n      console.log('所有选中的节点key', this.addRolePermission.roleKeys);\n    },\n\n    // 提交角色权限编辑\n    async commitRoleEdit() {\n      const {\n        data: res\n      } = await this.$axios.put(`${api.localUrl}/role`, {\n        id: this.rolePermission.id,\n        roleName: this.rolePermission.roleName,\n        roleKeys: this.rolePermission.roleKeys,\n        beforRoleName: this.rolePermission.beforRoleName\n      });\n      if (res.status !== 201) return this.$message.error('更改角色失败，请刷新重试');\n      this.roleEditList.drawer = false;\n      this.getRoleList();\n      this.$message.success('更改角色权限成功');\n      console.log(res);\n    },\n\n    // 添加角色\n    async addRoles() {\n      const {\n        data: res\n      } = await this.$axios.post(`${api.localUrl}/role`, {\n        roleName: this.addRolePermission.roleName,\n        roleKeys: this.addRolePermission.roleKeys\n      });\n      console.log(res);\n      if (res.status !== 200) return this.$message.error('更改角色失败，请刷新重试');\n      this.addEditList.drawer = false;\n      this.addRolePermission.roleName = '';\n      this.addRolePermission.roleKeys = [];\n      this.getRoleList();\n      this.$message.success('添加角色成功');\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsMA;AACA;AACA;AACA;EACAA;IACA;MACAC,mBADA;MAEAC,eAFA;MAGAC,iBAHA;MAIAC,WAJA;MAOAC;QACAC,SADA;QAEAC,UAFA;QAGAC,YAHA;QAIAC;MAJA,CAPA;MAaAC,eAbA;MAcAC,QAdA;MAeAC,aAfA;MAgBAC,YAhBA;MAiBAC,YAjBA;MAkBAC;QAAA;QACAH,aADA;QAEAI,aAFA;QAGAC;MAHA,CAlBA;MAuBAC;QAAA;QACAN,aADA;QAEAI,aAFA;QAGAC;MAHA,CAvBA;MA4BAE;QACAC,MADA;QAEAC,iBAFA;QAGAC,YAHA;QAIAC;MAJA,CA5BA;MAkCAC;QACAF,YADA;QAEAC;MAFA,CAlCA;MAsCAE,sBAtCA;MAuCAC;QACAC,kBADA;QAEAC;MAFA;IAvCA;EA4CA,CA9CA;;EA+CAC;IACAC;EADA,CA/CA;;EAkDAC;IACA;IACA;IACA;EACA,CAtDA;;EAuDAC;IACAC;MACAC;IACA,CAHA;;IAIAC;MACA;MACA;IACA,CAPA;;IAQAC;MACA;MACA;IACA,CAXA;;IAYA;IACA;MACA;QAAApC;MAAA;QACAqC;MADA;MAGA,wBACA;MACA;MACA;MACAH;MACA;IACA,CAvBA;;IAwBA;IACA;MACA;MACA;MACAA;IACA,CA7BA;;IA8BA;IACA;MACA;QAAAlC;MAAA;MACA,wBACA;MACA;MACAsC;QACA;UACA7B,cADA;UAEAmB;QAFA;MAIA,CALA;MAMAM;IACA,CA3CA;;IA4CA;IACA;MACA;;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;;MACA;QAAAlC;MAAA;MACA,wBACA;MACA;MACA;IACA,CAzDA;;IA0DA;IACAuC;MACA;IACA,CA7DA;;IA8DA;IACA;MACAL;MACA,kCACA,kDADA,EAEA;QACAM,4BADA;QAEAC,wBAFA;QAGAC,sBAHA;QAIAC,4BAJA;QAKAC,gCALA;QAMAC;MANA,CAFA;MAWA,wBACA;MACAX;MACA;MACA;IACA,CAjFA;;IAkFA;IACAY;MACA;IACA,CArFA;;IAsFA;IACA;MACA;MACA;IACA,CA1FA;;IA2FAC;MACA;MACA;MACAb;MACA;MACA;MACA;MACAA;MAEA;QACA;MACA,CAFA;IAGA,CAvGA;;IAwGAc;MACA;MACA;IACA,CA3GA;;IA4GA;IACAC;MACA;MACAf;IACA,CAhHA;;IAiHAgB;MACA;MACAhB;IACA,CApHA;;IAqHA;IACA;MACA;QAAAlC;MAAA;QACAoB,0BADA;QAEAE,sCAFA;QAGAC,sCAHA;QAIAF;MAJA;MAMA;MACA;MACA;MACA;MACAa;IACA,CAlIA;;IAmIA;IACA;MACA;QAAAlC;MAAA;QACAsB,yCADA;QAEAC;MAFA;MAIAW;MACA;MACA;MACA;MACA;MACA;MACA;IACA;;EAhJA;AAvDA","names":["data","activeName","searchValue","searchSelect","options","accountQuery","query","pagenum","pagesize","value","accountDate","total","drawer","editData","roleData","roleEditList","size","title","addEditList","rolePermission","id","beforRoleName","roleName","roleKeys","addRolePermission","rolePermissionList","roleProps","children","label","components","MinorDrawer","created","methods","handleClick","console","handleSizeChange","handleCurrentChange","params","res","drawerClose","mobile","role","sex","status","username","introduction","closeEdit","showDrawer","closeDrawer","handleCheckChange","addRoleChange"],"sourceRoot":"src/views/set","sources":["Permissions.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"tab\">\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n        <el-tab-pane label=\"账号管理\" name=\"first\">\n          <el-card>\n            <div class=\"account-card\">\n              <!-- 左边 -->\n              <div>\n                <el-button type=\"primary\" size=\"mini\" class=\"margin-r-10\">添加账号</el-button>\n                <el-select v-model=\"accountQuery.value\" placeholder=\"请选择\" size=\"mini\">\n                  <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n                  </el-option>\n                </el-select>\n              </div>\n              <!-- 右边 -->\n              <div class=\"right\">\n                <el-input placeholder=\"请输入搜索内容\" v-model=\"searchValue\" class=\"input-with-select\" size=\"mini\">\n                  <el-select v-model=\"searchSelect\" slot=\"prepend\" placeholder=\"请选择\" size=\"mini\">\n                    <el-option label=\"手机号\" value=\"1\"></el-option>\n                    <el-option label=\"用户名\" value=\"2\"></el-option>\n                  </el-select>\n                  <el-button slot=\"append\" icon=\"el-icon-search\" size=\"mini\"></el-button>\n                </el-input>\n              </div>\n            </div>\n            <!-- 表格内容区 -->\n            <div>\n              <el-table :data=\"accountDate\" style=\"width: 100%\">\n                <el-table-column prop=\"username\" label=\"用户名\" width=\"180\"></el-table-column>\n                <el-table-column prop=\"role\" label=\"角色\" width=\"180\"></el-table-column>\n                <el-table-column prop=\"mobile\" label=\"手机号\"></el-table-column>\n                <el-table-column label=\"性别\">\n                  <template slot-scope=\"scope\">\n                    <el-tag :type=\"scope.row.sex === '男' ? '' : 'danger'\">{{scope.row.sex}}</el-tag>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"状态\">\n                  <template slot-scope=\"scope\">\n                    <div class=\"status\">\n                      <span class=\"status_circle\" :style=\"{'background-color': scope.row.status === 1 ? '#52c41a' : '#c5c5c5'}\"></span>\n                      <span>{{scope.row.status === 1 ? '开启' : '关闭'}}</span>\n                    </div>\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"创建时间\">\n                  <template slot-scope=\"scope\">\n                    {{scope.row.createtime | transformTime}}\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"操作\">\n                  <template slot-scope=\"scope\">\n                    <el-button type=\"primary\" @click=\"showAccountEdit(scope.row)\" size=\"mini\" style=\"margin-right: 10px;\">编辑</el-button>\n                    <el-popconfirm confirm-button-text='确认' cancel-button-text='取消' icon=\"el-icon-info\" icon-color=\"red\" title=\"确定删除该账号吗？不可恢复！！\" @confirm=\"removeCustomer(scope.row.customerId)\">\n                      <el-button slot=\"reference\" type=\"danger\" size=\"mini\">删除</el-button>\n                    </el-popconfirm>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n            <!-- 分页 -->\n            <div class=\"pagination\">\n              <el-pagination background @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"accountQuery.pagenum\" :page-sizes=\"[10, 20, 30, 40, 60]\" :page-size=\"accountQuery.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n              </el-pagination>\n            </div>\n          </el-card>\n        </el-tab-pane>\n        <!-- 角色管理页 -->\n        <el-tab-pane label=\"角色管理\" name=\"second\">\n          <el-card>\n            <div class=\"add_role\">\n              <el-button size=\"mini\" type=\"primary\" @click=\"addRole\">添加角色</el-button>\n            </div>\n            <!-- 角色列表展示 -->\n            <div>\n              <el-table :data=\"roleData\" style=\"width: 100%\">\n                <el-table-column label=\"角色名\" prop=\"rolename\"></el-table-column>\n                <el-table-column label=\"使用账号数量\" prop=\"accRoleNum\"></el-table-column>\n                <el-table-column label=\"操作\">\n                   <template slot-scope=\"scope\">\n                    <el-button type=\"primary\" size=\"mini\" style=\"margin-right: 10px;\" @click=\"showDrawer(scope.row)\">编辑</el-button>\n                    <el-popconfirm confirm-button-text='确认' cancel-button-text='取消' icon=\"el-icon-info\" icon-color=\"red\" title=\"确定删除该角色吗？不可恢复！！\">\n                      <el-button slot=\"reference\" type=\"danger\" size=\"mini\">删除</el-button>\n                    </el-popconfirm>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </el-card>\n        </el-tab-pane>\n      </el-tabs>\n    </div>\n    <!-- 角色管理编辑抽屉 -->\n    <MinorDrawer :drawerFlagD.sync=\"roleEditList.drawer\" :size=\"roleEditList.size\" :title=\"roleEditList.title\">\n      <div slot=\"contents\">\n        <el-form ref=\"roleForm\" :model=\"rolePermission\" label-width=\"80px\">\n          <el-form-item label=\"角色名称\">\n            <el-input v-model=\"rolePermission.roleName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"添加权限\">\n            <el-tree :data=\"rolePermissionList\" ref=\"roleRef\" :props=\"roleProps\" node-key=\"id\" show-checkbox @check-change=\"handleCheckChange\">\n            </el-tree>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"button\">\n        <el-button size=\"mini\" @click=\"closeDrawer\">取消</el-button>\n        <el-button type=\"primary\" size=\"mini\" @click=\"commitRoleEdit\">确定</el-button>\n      </div>\n    </MinorDrawer>\n    <!-- 角色添加抽屉 -->\n    <MinorDrawer :drawerFlagD.sync=\"addEditList.drawer\" :size=\"addEditList.size\" :title=\"addEditList.title\">\n      <div slot=\"contents\">\n        <el-form ref=\"roleForm\" :model=\"addRolePermission\" label-width=\"80px\">\n          <el-form-item label=\"角色名称\">\n            <el-input v-model=\"addRolePermission.roleName\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"添加权限\">\n            <el-tree :data=\"rolePermissionList\" ref=\"addRoleRef\" :props=\"roleProps\" node-key=\"id\" show-checkbox @check-change=\"addRoleChange\">\n            </el-tree>\n          </el-form-item>\n        </el-form>\n      </div>\n      <div slot=\"button\">\n        <el-button size=\"mini\" @click=\"closeDrawer\">取消</el-button>\n        <el-button type=\"primary\" size=\"mini\" @click=\"addRoles\">确定</el-button>\n      </div>\n    </MinorDrawer>\n    <!-- 账号编辑抽屉 -->\n    <el-drawer title=\"账号编辑\" :visible.sync=\"drawer\" :before-close=\"drawerClose\" size=\"560px\">\n      <div class=\"editInfoHeader\">\n        <el-avatar shape=\"square\" :size=\"64\" :src=\"editData.avatar_url\"></el-avatar>\n        <div class=\"userid\">\n          <span>用户 ID: {{editData.userid}}</span>\n          <span>创建时间: {{editData.createtime | transformTime}}</span>\n        </div>\n      </div>\n      <div class=\"editContent\">\n        <el-form ref=\"form\" :model=\"editData\" label-width=\"80px\" class=\"editForm\">\n          <el-row>\n            <el-col :span=\"12\">\n              <el-form-item label=\"用户名:\">\n                <el-input v-model=\"editData.username\" size=\"small\"></el-input>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"手机号:\">\n                <el-input v-model=\"editData.mobile\" size=\"small\"></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-col :span=\"12\">\n              <el-form-item label=\"性别:\">\n                <el-select v-model=\"editData.sex\" placeholder=\"请选择性别\" size=\"small\">\n                  <el-option label=\"男\" value=\"男\"></el-option>\n                  <el-option label=\"女\" value=\"女\"></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"12\">\n              <el-form-item label=\"状态:\">\n                <el-select v-model=\"editData.status\" placeholder=\"请选择状态\" size=\"small\">\n                  <el-option label=\"开启\" value=\"开启\"></el-option>\n                  <el-option label=\"禁用\" value=\"禁用\"></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-col :span=\"12\">\n              <el-form-item label=\"角色:\">\n                <el-select v-model=\"editData.role\" placeholder=\"请选择性别\" size=\"small\">\n                  <el-option v-for=\"role in roleData\" :key=\"role.id\" :label=\"role.rolename\" :value=\"role.rolename\"></el-option>\n                </el-select>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          <el-row>\n            <el-col :span=\"24\">\n              <el-form-item label=\"个人简介:\">\n                <el-input type=\"textarea\" :rows=\"5\" placeholder=\"请输入内容\" v-model=\"editData.introduction\">\n                </el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n        </el-form>\n        <!-- 提交按钮 -->\n        <div class=\"editButton\">\n          <el-button size=\"small\" @click=\"closeEdit\">取消</el-button>\n          <el-button type=\"primary\" @click=\"commitEdit\" size=\"small\">提交</el-button>\n        </div>\n      </div>\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport api from '../../../api/index'\nimport _ from 'lodash'\nimport MinorDrawer from '../../components/M-Drawer.vue'\nexport default {\n  data() {\n    return {\n      activeName: 'first',\n      searchValue: '',\n      searchSelect: '1',\n      options: [\n        \n      ],\n      accountQuery: {\n        query: '',\n        pagenum: 1,\n        pagesize: 10,\n        value: '1',\n      },\n      accountDate: [],\n      total: 0,\n      drawer: false,\n      editData: [],\n      roleData: [],\n      roleEditList: { // 角色编辑抽屉设置项\n        drawer: false,\n        size: '560px',\n        title: '角色编辑',\n      },\n      addEditList: { // 添加角色抽屉设置项\n        drawer: false,\n        size: '560px',\n        title: '角色添加',\n      },\n      rolePermission: {\n        id: '',\n        beforRoleName: '',\n        roleName: '',\n        roleKeys: []\n      },\n      addRolePermission: {\n        roleName: '',\n        roleKeys: []\n      },\n      rolePermissionList: [],\n      roleProps: {\n        children: 'childs',\n        label: 'name'\n      },\n    }\n  },\n  components: {\n    MinorDrawer: MinorDrawer,\n  },\n  created() {\n    this.getAccountList()\n    this.getMenuList()\n    this.getRoleList()\n  },\n  methods: {\n    handleClick(e) {\n      console.log(e)\n    },\n    handleSizeChange(size) {\n      this.accountQuery.pagesize = size\n      this.getAccountList()\n    },\n    handleCurrentChange(num) {\n      this.accountQuery.pagenum = num\n      this.getAccountList()\n    },\n    // 获取账号列表\n    async getAccountList() {\n      const { data: res } = await this.$axios.get(`${api.localUrl}/accounts`, {\n        params: this.accountQuery,\n      })\n      if (res.status !== 200)\n        return this.$message.error('获取账号列表失败，请刷新重试')\n      this.accountDate = res.data\n      this.total = res.total\n      console.log('账号列表', res)\n      let userId = window.sessionStorage.getItem('userid')\n    },\n    // 获取菜单项\n    async getMenuList() {\n      const result = await this.$axios.get(`${api.localUrl}/menus`)\n      this.rolePermissionList = result.data.data\n      console.log('权限列表', result)\n    },\n    // 获取角色列表\n    async getRoleList() {\n      const {data: res} = await this.$axios.get(`${api.localUrl}/role`)\n      if (res.status !== 200)\n        return this.$message.error('获取角色列表失败，请刷新重试')\n      this.roleData = res.data\n      res.data.forEach(item => {\n        this.options.push({\n          value: item.id,\n          label: item.rolename\n        })\n      })\n      console.log('res1', res)\n    },\n    // 显示抽屉\n    async showAccountEdit(acc) {\n      this.editData = _.cloneDeep(acc)\n      if (this.editData.status === 1) {\n        this.editData.status = '开启'\n      } else {\n        this.editData.status = '禁用'\n      }\n      const { data: res } = await this.$axios.get(`${api.localUrl}/role`)\n      if (res.status !== 200)\n        return this.$message.error('获取角色列表失败，请刷新重试')\n      this.roleData = res.data\n      this.drawer = true\n    },\n    // 抽屉关闭前的动作\n    drawerClose() {\n      this.drawer = false\n    },\n    // 提交账号编辑\n    async commitEdit() {\n      console.log(this.editData)\n      const res = await this.$axios.put(\n        `${api.localUrl}/accounts/${this.editData.userid}`,\n        {\n          mobile: this.editData.mobile,\n          role: this.editData.role,\n          sex: this.editData.sex,\n          status: this.editData.status,\n          username: this.editData.username,\n          introduction: this.editData.introduction\n        }\n      )\n      if (res.status !== 200)\n        return this.$message.error('更改账号状态失败，请刷新重试')\n      console.log(res)\n      this.drawer = false\n      this.getAccountList()\n    },\n    // 关闭抽屉\n    closeEdit() {\n      this.drawer = false\n    },\n    // 打开角色添加抽屉\n    async addRole() {\n      this.getMenuList()\n      this.addEditList.drawer = true\n    },\n    showDrawer(re) {\n      // 角色管理-打开抽屉\n      this.roleEditList.drawer = true\n      console.log(re,re.menus.split(','))\n      this.rolePermission.id = re.id\n      this.rolePermission.roleName = re.rolename\n      this.rolePermission.beforRoleName = re.rolename\n      console.log('zheshi', this.rolePermission.roleKeys)\n\n      this.$nextTick(() => {\n        this.$refs.roleRef.setCheckedKeys(re.menus.split(','))\n      })\n    },\n    closeDrawer() {\n      // 角色管理-关闭抽屉\n      this.roleEditList.drawer = false\n    },\n    // 角色节点选中状态发生变化时的回调\n    handleCheckChange(a, b, c) {\n      this.rolePermission.roleKeys = this.$refs.roleRef.getCheckedKeys(true)\n      console.log('所有选中的节点key', this.rolePermission.roleKeys)\n    },\n    addRoleChange() {\n      this.addRolePermission.roleKeys = this.$refs.addRoleRef.getCheckedKeys(true)\n      console.log('所有选中的节点key', this.addRolePermission.roleKeys)\n    },\n    // 提交角色权限编辑\n    async commitRoleEdit() {\n      const {data: res} = await this.$axios.put(`${api.localUrl}/role`, {\n        id: this.rolePermission.id,\n        roleName: this.rolePermission.roleName,\n        roleKeys: this.rolePermission.roleKeys,\n        beforRoleName: this.rolePermission.beforRoleName,\n      })\n      if(res.status !== 201) return this.$message.error('更改角色失败，请刷新重试')\n      this.roleEditList.drawer = false\n      this.getRoleList()\n      this.$message.success('更改角色权限成功')\n      console.log(res)\n    },\n    // 添加角色\n    async addRoles() {\n      const {data: res} = await this.$axios.post(`${api.localUrl}/role`, {\n        roleName: this.addRolePermission.roleName,\n        roleKeys: this.addRolePermission.roleKeys,\n      })\n      console.log(res)\n      if(res.status !== 200) return this.$message.error('更改角色失败，请刷新重试')\n      this.addEditList.drawer = false\n      this.addRolePermission.roleName = ''\n      this.addRolePermission.roleKeys = []\n      this.getRoleList()\n      this.$message.success('添加角色成功')\n    }\n  },\n}\n</script>\n\n<style lang=\"less\" scoped>\n.margin-r-10 {\n  margin-right: 10px;\n}\n.tab {\n  ::v-deep .el-tabs__item {\n    padding: 0;\n    width: 66px;\n    display: flex;\n    justify-content: center;\n  }\n  ::v-deep .el-card__body {\n  }\n  .right {\n    .el-select {\n      width: 90px;\n    }\n  }\n}\n.account-card {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 18px;\n}\n.pagination {\n  margin-top: 16px;\n  text-align: left;\n}\n\n::v-deep .el-drawer__header {\n  margin-bottom: 0;\n  padding: 20px 20px;\n  border-bottom: 1px solid #e8eaec;\n}\n::v-deep .el-drawer__body {\n  // padding: 0 20px;\n}\n.editInfoHeader {\n  display: flex;\n  justify-content: center;\n  border-bottom: 1px solid #e8eaec;\n  padding: 20px 0;\n  margin-bottom: 20px;\n  .userid {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: space-between;\n    margin-left: 80px;\n    font-size: 14px;\n  }\n}\n.el-form-item {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0 20px;\n  ::v-deep .el-form-item__content {\n    margin-left: 0 !important;\n    width: 100%;\n  }\n  ::v-deep .el-form-item__label {\n    text-align: left;\n    line-height: 24px;\n  }\n  .el-select {\n    width: 100%;\n  }\n  ::v-deep .el-input__inner {\n    padding: 0 6px;\n  }\n  ::v-deep .el-textarea__inner {\n    padding: 5px 6px;\n  }\n}\n.status {\n  display: flex;\n  align-items: center;\n  .status_circle {\n    width: 6px;\n    height: 6px;\n    display: inline-block;\n    border-radius: 20px;\n    margin-right: 4px;\n  }\n}\n.editContent {\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 126px);\n  .editForm {\n    flex: 1;\n    padding-bottom: 62px;\n  }\n  .editButton {\n    position: absolute;\n    width: 100%;\n    bottom: 0;\n    border-top: 1px solid #e8e8e8;\n    text-align: right;\n    padding: 10px;\n    box-sizing: border-box;\n    background-color: #fff;\n  }\n}\n\n.add_role {\n  text-align: left;\n  margin-bottom: 18px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}