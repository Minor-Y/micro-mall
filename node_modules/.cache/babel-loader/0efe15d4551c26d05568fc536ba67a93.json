{"ast":null,"code":"import api from '../../../api/index';\nexport default {\n  data() {\n    return {\n      pparams: {\n        location: '',\n        key: 'b039d29332b3477c84c6131e424510ec'\n      }\n    };\n  },\n\n  created() {\n    this.getWeather();\n  },\n\n  methods: {\n    async getWeather() {\n      // 获取IP，再根据IP获取城市名称\n      const cityIp = await this.$axios.get('/ip/cityjson');\n      if (cityIp.status !== 200) return this.$message.error('获取IP地址失败'); // 分离并获取ip地址\n\n      let ip = cityIp.data.split('=')[1];\n      ip = JSON.parse(ip.split(';')[0]);\n      const cityName = await this.$axios.get('/api/ipJson.jsp', {\n        params: {\n          ip: ip,\n          json: true\n        }\n      });\n      if (cityName.status !== 200) return this.$$message.error('获取ip信息失败');\n      this.pparams.location = cityName.data.city.split('市')[0]; // 根据城市名称获取城市ID\n\n      const cityId = await this.$axios.get(api.getLocationId, {\n        params: this.pparams\n      });\n      console.log(this.pparams.location);\n      console.log(cityId);\n      console.log(cityName); // 获取城市ID\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAwBA;AACA;EACAA;IACA;MACAC;QACAC,YADA;QAEAC;MAFA;IADA;EAMA,CARA;;EASAC;IACA;EACA,CAXA;;EAYAC;IACA;MACA;MACA;MACA,kEAHA,CAIA;;MACA;MACAC;MACA;QACAC;UAAAD;UAAAE;QAAA;MADA;MAGA;MACA,yDAXA,CAYA;;MACA;QACAD;MADA;MAIAE;MACAA;MACAA,sBAnBA,CAoBA;IACA;;EAtBA;AAZA","names":["data","pparams","location","key","created","methods","ip","params","json","console"],"sourceRoot":"src/views/dashboardover","sources":["Dashboardover.vue"],"sourcesContent":["<template>\n  <div>\n    <el-row>\n      <el-col class=\"dash-left\">\n        <el-card shadow=\"never\" class=\"dash-hello\">\n          <el-col class=\"dash-welcome\">\n            <span>{{}},欢迎~</span>\n          </el-col>\n          <el-col class=\"dash-weather\">\n            <el-avatar shape=\"circle\" size=\"large\" src=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\"></el-avatar>\n          </el-col>\n        </el-card>\n      </el-col>\n      <el-col class=\"dash-right\">\n        <el-card shadow=\"never\" class=\"dash-notice\">\n\n        </el-card>\n      </el-col>\n    </el-row>\n\n  </div>\n</template>\n\n<script>\nimport api from '../../../api/index'\nexport default {\n  data() {\n    return {\n        pparams: {\n            location: '',\n            key: 'b039d29332b3477c84c6131e424510ec',\n        }\n    }\n  },\n  created() {\n    this.getWeather()\n  },\n  methods: {\n    async getWeather() {\n        // 获取IP，再根据IP获取城市名称\n        const cityIp = await this.$axios.get('/ip/cityjson')\n        if(cityIp.status !== 200) return this.$message.error('获取IP地址失败')\n        // 分离并获取ip地址\n        let ip = cityIp.data.split('=')[1]\n        ip = JSON.parse(ip.split(';')[0])\n        const cityName = await this.$axios.get('/api/ipJson.jsp', {\n            params: {ip: ip ,json: true}\n        })\n        if(cityName.status !== 200) return this.$$message.error('获取ip信息失败')\n        this.pparams.location = cityName.data.city.split('市')[0]\n        // 根据城市名称获取城市ID\n        const cityId = await this.$axios.get(api.getLocationId, {\n            params: this.pparams\n        })\n        \n        console.log(this.pparams.location)\n        console.log(cityId)\n        console.log(cityName)\n        // 获取城市ID\n    }\n  },\n}\n</script>\n\n<style lang=\"less\" scoped>\n.el-row {\n  display: flex;\n}\n.el-card {\n  box-shadow: 0 0 4px 0 rgb(200 200 200 / 50%);\n  border: none;\n  margin: 2px 2px 12px 2px;\n}\n.dash-left {\n  flex: 1;\n  height: 100%;\n}\n.dash-right {\n  width: 280px;\n  height: 100%;\n  margin-left: 12px;\n}\n.dash-hello {\n  height: 190px;\n  .dash-welcome {\n    font-size: 18px;\n    font-weight: 700;\n    margin-bottom: 28px;\n  }\n  .dash-weather {\n    .el-avatar {\n      width: 60px;\n      height: 60px;\n    }\n  }\n}\n\n::v-deep .el-card__body {\n  padding: 15px;\n  height: 100%;\n  box-sizing: border-box;\n  text-align: left;\n}\n</style>"]},"metadata":{},"sourceType":"module"}